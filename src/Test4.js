import React, { Component } from 'react'
import axios from 'axios';
import './App.css';
import {
    LineChart,
    Legend, Tooltip,
    Line,
    XAxis,
    YAxis,
    CartesianGrid, 
    ResponsiveContainer
} from 'recharts';


class Test4 extends Component {
    state = {
        plots: []
    }
    componentDidMount() {
        let endpoints = [
            'https://raw.githubusercontent.com/cindyiskandar/Demo-Repo/new_commit/ac_power_output_data.json',
            'https://raw.githubusercontent.com/cindyiskandar/Demo-Repo/new_commit/ac_power_winter_data.json',
            'https://raw.githubusercontent.com/cindyiskandar/Demo-Repo/new_commit/ac_power_summer_data.json',
            'https://raw.githubusercontent.com/cindyiskandar/Demo-Repo/new_commit/ac_power_tracker_data.json',
        ];

        axios.all(endpoints.map((endpoint) => axios.get(endpoint))).then(
            (res) => {
                // console.log(res[0].data)
                // console.log(res[1].data)
                res.forEach((arr, index) => {
                    arr.data.forEach((element,i) => {
                        if(index>0){
                            res[0].data[i]['AC_Power_' + index] = element.AC_Power
                        }
                    });
                });
                console.log(res[0].data)
                
                var plots = res[0].data;
                plots.forEach(element => {
                    element.end_period = new Date(element.end_period)
                    element.end_period = element.end_period.toLocaleTimeString(navigator.language, {
                        hour: '2-digit',
                        minute:'2-digit'
                      });
                });
            //    const plots = res[0].data.concat(res[1].data)
                this.setState({plots:res[0].data})
            },
        );

    }

    render() {
        return (
            <div>
            <p>The estimated power generated by the array in the upcoming 24 hrs for different scenarios is:</p>
            <ResponsiveContainer width="95%" height={300}>
                <LineChart width={730} height={250} data={this.state.plots}
                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="end_period" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Line type="monotone" dataKey="AC_Power" stroke="yellow" />
                    <Line type="monotone" dataKey="AC_Power_1" stroke="red" />
                    <Line type="monotone" dataKey="AC_Power_2" stroke="green" />
                    <Line type="monotone" dataKey="AC_Power_3" stroke="blue" />
                </LineChart>
                </ResponsiveContainer>
                <p style={{color: "yellow"}}>AC_Power represents “ac_power_output_data.json”</p>
                <p style={{color: "red"}}>AC_Power_1 represents “ac_power_winter_data.json”</p>
                <p style={{color: "green"}}>AC_Power_2 represents “ac_power_summer_data.json”</p>
                <p style={{color: "blue"}}>AC_Power_3 represents “ac_power_tracker_data.json” </p>
            </div>
        )
    }


}

export default Test4;
             